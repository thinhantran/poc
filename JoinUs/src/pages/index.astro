---
import '../assets/style/index.css';
import SiteHeader from '../components/SiteHeader.astro';
import EventFilter from '../components/EventFilter.astro';
import { API_BASE } from '../utils/api.ts';

const response = await fetch(`${API_BASE}/api/events`);
if (!response.ok) {
	throw new Error('Failed to fetch events');
}

type Event = {
	id: number;
	name: string;
	type: string;
	location: string;
	dateTime: string;
	description: string;
	price: number;
	imageUrl: string;
	tickets: any[];
};

const events: Event[] = await response.json();

const url = new URL(Astro.request.url);
const selectedType = url.searchParams.get('type') || '';

function slugify(str: string): string {
	return str.toLowerCase().replace(/\s+/g, '-').replace(/[^\w-]/g, '');
}
const types = [...new Set(events.map(e => e.type))];

---

<html lang="en">
<head>
	<meta charset="UTF-8" />
	<title>JoinUs </title>
	<meta name="description" content="A roundup of the latest events for you." />
</head>
<body class="body">
<SiteHeader />
<EventFilter
	types={types}
	selected={selectedType}
	currentUrl="/events"
/>
<main class="events-grid">
	{events.map((event) => {
		const slug = slugify(event.name);
		const date = new Date(event.dateTime);
		return (
			<a href={`/events/${slug}`} class="event-card">
				<img src={event.imageUrl} alt={event.name} class="event-image" />
				<div class="event-info">
					<h2 class="event-title">{event.name}</h2>
					<p class="event-detail">
						<strong>Date:</strong> {date.toLocaleDateString()} <br />
						<strong>Time:</strong> {date.toLocaleTimeString([], { hour: '2-digit', minute: '2-digit' })}
					</p>
					<p class="event-detail"><strong>Location:</strong> {event.location}</p>
					<p class="event-price">
						<strong>Price:</strong> {event.price ? `${event.price?.toFixed(2)} â‚¬` : 'Free'}
					</p>
				</div>
			</a>
		);
	})}
</main>

</body>
</html>
